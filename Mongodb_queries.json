
// Select the database to use.
use('Sprint2_ex2');

/**1 */ db.restaurants.find({});
//2 
db.restaurants.find({}, {restaurant_id: 1, name: 1, cuisine: 1});
//3
db.restaurants.find({}, {restaurants_id:1, name:1, borough:1, cuisine:1, _id:0} );
//4
db.restaurants.find({}, {restaurants_id:1, name:1, borough:1, "address.zipcode":1, _id:0} );
//5
db.restaurants.find({borough: "Bronx"});
//6
db.restaurants.find({borough: "Bronx"}).limit(5);
//7
db.restaurants.find({borough:"Bronx"}).skip(5).limit(5); 
//8
db.restaurants.find({"grades.score":{$gt:90}});
//9
db.restaurants.find({"grades.score":{$gt:80 , $lt:100}});
//10
db.restaurants.find({"address.coord.0":{$lt:-95.754168} });
/*11*/ db.restaurants.find({cuisine: {$ne: "American"}, "grades.score": {$gt: 70}, "address.coord.1": {$lt: -65.754168 }});
//12
db.restaurants.find({cuisine: { $ne: "American" },"grades.score": { $gt: 70 },"address.coord.0": { $lt: -65.754168 }});
//13
db.restaurants.find({cuisine: { $ne: "American " }, "grades.grade": "A", borough: { $ne: "Brooklyn" }}).sort({ cuisine: -1 });
//14
db.restaurants.find( { name: { $regex: /^Wil/i } },  { restaurant_id: 1, name: 1, borough: 1, cuisine: 1});
//15
db.restaurants.find( { name: { $regex: /ces$/, $options: 'i' } }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });
//16
db.restaurants.find(  { name: { $regex: /Reg/, $options: 'i' } }, { restaurant_id: 1, name: 1, borough: 1, cuisine: 1 });
//17
db.restaurants.find({borough: "Bronx", cuisine: {$in: ["American", "Chinese"]}});
//18.Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per aquells restaurants que pertanyen a Staten Island, Queens, Bronx o Brooklyn.
db.restaurants.find({borough:{$in:["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, {restaurant_id: 1, name: 1, borough: 1 , cuisine: 1});
/*19*/ db.restaurants.find({borough:{$ne:["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, {restaurant_id: 1, name:1,  borough: 1 , cuisine: 1});

//20Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que aconsegueixin una nota menor que 10.
db.restaurants.find({"grades.score": {$lt: 10}}, {restaurant_id: 1, name: 1, borough: 1 , cuisine: 1});

 